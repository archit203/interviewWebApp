{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Singh\\\\OneDrive\\\\Desktop\\\\rootfolder\\\\Tracker\\\\covid-19-tracker\\\\src\\\\LineGraph.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Line } from \"react-chartjs-2\"; // import numeral from \"numeral\";\n// const options = {\n//     legend: {\n//       display: false,\n//     },\n//     elements: {\n//       point: {\n//         radius: 0,\n//       },\n//     },\n//     maintainAspectRatio: false,\n//     tooltips: {\n//       mode: \"index\",\n//       intersect: false,\n//       callbacks: {\n//         label: function (tooltipItem, data) {\n//           return numeral(tooltipItem.value).format(\"+0,0\");\n//         },\n//       },\n//     },\n//     scales: {\n//       xAxes: [\n//         {\n//           type: \"time\",\n//           time: {\n//             format: \"MM/DD/YY\",\n//             tooltipFormat: \"ll\",\n//           },\n//         },\n//       ],\n//       yAxes: [\n//         {\n//           gridLines: {\n//             display: false,\n//           },\n//           ticks: {\n//             // Include a dollar sign in the ticks\n//             callback: function (value, index, values) {\n//               return numeral(value).format(\"0a\");\n//             },\n//           },\n//         },\n//       ],\n//     },\n//   };\n// const buildChartData = (data, casesType=\"cases\") => {\n//   let chartData = [];\n//   let lastDataPoint;\n//   for (let date in data.cases) {\n//     if (lastDataPoint) {\n//       let newDataPoint = {\n//         x: date,\n//         y: data[casesType][date] - lastDataPoint,\n//       };\n//       chartData.push(newDataPoint);\n//     }\n//     lastDataPoint = data[casesType][date];\n//   }\n//   return chartData;\n// };\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LineGraph() {\n  var _data;\n\n  // const [data, setData] = useState({});\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\n  //       .then((response) => {\n  //         return response.json();\n  //       })\n  //       .then((data) => {\n  //         let chartData = buildChartData(data, 'cases');\n  //         setData(chartData);\n  //         console.log(chartData);\n  //         // buildChart(chartData);\n  //       });\n  //   };\n  //   fetchData();\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: ((_data = data) === null || _data === void 0 ? void 0 : _data.length) > 0 && /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n          borderColor: \"#CC1034\",\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useState","useEffect","Line","LineGraph","data","length","options","datasets","backgroundColor","borderColor"],"sources":["C:/Users/Aditya Singh/OneDrive/Desktop/rootfolder/Tracker/covid-19-tracker/src/LineGraph.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n// import numeral from \"numeral\";\r\n\r\n// const options = {\r\n//     legend: {\r\n//       display: false,\r\n//     },\r\n//     elements: {\r\n//       point: {\r\n//         radius: 0,\r\n//       },\r\n//     },\r\n//     maintainAspectRatio: false,\r\n//     tooltips: {\r\n//       mode: \"index\",\r\n//       intersect: false,\r\n//       callbacks: {\r\n//         label: function (tooltipItem, data) {\r\n//           return numeral(tooltipItem.value).format(\"+0,0\");\r\n//         },\r\n//       },\r\n//     },\r\n//     scales: {\r\n//       xAxes: [\r\n//         {\r\n//           type: \"time\",\r\n//           time: {\r\n//             format: \"MM/DD/YY\",\r\n//             tooltipFormat: \"ll\",\r\n//           },\r\n//         },\r\n//       ],\r\n//       yAxes: [\r\n//         {\r\n//           gridLines: {\r\n//             display: false,\r\n//           },\r\n//           ticks: {\r\n//             // Include a dollar sign in the ticks\r\n//             callback: function (value, index, values) {\r\n//               return numeral(value).format(\"0a\");\r\n//             },\r\n//           },\r\n//         },\r\n//       ],\r\n//     },\r\n//   };\r\n\r\n// const buildChartData = (data, casesType=\"cases\") => {\r\n//   let chartData = [];\r\n//   let lastDataPoint;\r\n//   for (let date in data.cases) {\r\n//     if (lastDataPoint) {\r\n//       let newDataPoint = {\r\n//         x: date,\r\n//         y: data[casesType][date] - lastDataPoint,\r\n//       };\r\n//       chartData.push(newDataPoint);\r\n//     }\r\n//     lastDataPoint = data[casesType][date];\r\n//   }\r\n//   return chartData;\r\n// };\r\n\r\nfunction LineGraph() {\r\n  // const [data, setData] = useState({});\r\n\r\n  // useEffect(() => {\r\n  //   const fetchData = async () => {\r\n  //     await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\r\n  //       .then((response) => {\r\n  //         return response.json();\r\n  //       })\r\n  //       .then((data) => {\r\n  //         let chartData = buildChartData(data, 'cases');\r\n  //         setData(chartData);\r\n  //         console.log(chartData);\r\n  //         // buildChart(chartData);\r\n  //       });\r\n  //   };\r\n\r\n  //   fetchData();\r\n  // }, []);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length > 0 && (\r\n        <Line\r\n          options={options}\r\n          data={{\r\n            datasets: [\r\n              {\r\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\r\n                borderColor: \"#CC1034\",\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LineGraph;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,IAAT,QAAqB,iBAArB,C,CACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,SAAT,GAAqB;EAAA;;EACnB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA,oBACE;IAAA,UACG,UAAAC,IAAI,UAAJ,sCAAMC,MAAN,IAAe,CAAf,iBACC,QAAC,IAAD;MACE,OAAO,EAAEC,OADX;MAEE,IAAI,EAAE;QACJC,QAAQ,EAAE,CACR;UACEC,eAAe,EAAE,wBADnB;UAEEC,WAAW,EAAE,SAFf;UAGEL,IAAI,EAAEA;QAHR,CADQ;MADN;IAFR;MAAA;MAAA;MAAA;IAAA;EAFJ;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;KAtCQD,S;AAwCT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}