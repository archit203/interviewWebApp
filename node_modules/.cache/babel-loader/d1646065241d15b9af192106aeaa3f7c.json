{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aditya Singh\\\\OneDrive\\\\Desktop\\\\rootfolder\\\\Tracker\\\\covid-19-tracker\\\\src\\\\LineGraph.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Line } from \"react-chartjs-2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  legend: {\n    display: false\n  },\n  elements: {\n    point: {\n      radius: 0\n    }\n  }\n};\n\nfunction LineGraph() {\n  _s();\n\n  const [data, setData] = useState({}); // https://disease.sh/v3/covid-19/historical/all?lastdays=30\n\n  const buildChartData = function (data) {\n    let casesType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"cases\";\n    let chartData = [];\n    let lastDataPoint;\n\n    for (let date in data.cases) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint\n        };\n        chartData.push(newDataPoint);\n      }\n\n      lastDataPoint = data[casesType][date];\n    }\n\n    ;\n    return chartData;\n  };\n\n  useEffect(() => {\n    fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\").then(response => response.json()).then(data => {\n      console.log(data);\n      let chartData = buildChartData(data, 'cases');\n      console.log(chartData);\n      setData(chartData);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Line, {\n      options: options,\n      data: {\n        datasets: [{\n          data: data\n        }]\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LineGraph, \"tNVKLF/eI269iIOS4WygXQde5D8=\");\n\n_c = LineGraph;\nexport default LineGraph;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineGraph\");","map":{"version":3,"names":["React","useEffect","useState","Line","options","legend","display","elements","point","radius","LineGraph","data","setData","buildChartData","casesType","chartData","lastDataPoint","date","cases","newDataPoint","x","y","push","fetch","then","response","json","console","log","datasets"],"sources":["C:/Users/Aditya Singh/OneDrive/Desktop/rootfolder/Tracker/covid-19-tracker/src/LineGraph.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport {Line} from \"react-chartjs-2\";\r\n\r\nconst options = {\r\n    legend: {\r\n        display: false,\r\n    },\r\n    elements: {\r\n        point: {\r\n            radius: 0,\r\n        },\r\n    },\r\n}\r\n\r\nfunction LineGraph() {\r\n    const [data, setData] = useState({});  \r\n    // https://disease.sh/v3/covid-19/historical/all?lastdays=30\r\n\r\n    const buildChartData = (data, casesType=\"cases\") => {\r\n        let chartData = [];\r\n        let lastDataPoint;\r\n\r\n        for(let date in data.cases){\r\n            if(lastDataPoint){\r\n                let newDataPoint = {\r\n                    x: date,\r\n                    y: data[casesType][date] - lastDataPoint\r\n                }\r\n                chartData.push(newDataPoint);\r\n            }\r\n            lastDataPoint = data[casesType][date];\r\n\r\n        };\r\n        return chartData;\r\n    }    \r\n\r\n    useEffect(()=>{\r\n        fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=30\")\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            let chartData = buildChartData(data, 'cases');\r\n            console.log(chartData);\r\n            setData(chartData);\r\n        })\r\n    }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n        <Line \r\n            options={options}\r\n            data={{\r\n                datasets: [{\r\n                    data: data\r\n                }\r\n                ]\r\n        }} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LineGraph"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAAQC,IAAR,QAAmB,iBAAnB;;AAEA,MAAMC,OAAO,GAAG;EACZC,MAAM,EAAE;IACJC,OAAO,EAAE;EADL,CADI;EAIZC,QAAQ,EAAE;IACNC,KAAK,EAAE;MACHC,MAAM,EAAE;IADL;EADD;AAJE,CAAhB;;AAWA,SAASC,SAAT,GAAqB;EAAA;;EACjB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC,CADiB,CAEjB;;EAEA,MAAMW,cAAc,GAAG,UAACF,IAAD,EAA6B;IAAA,IAAtBG,SAAsB,uEAAZ,OAAY;IAChD,IAAIC,SAAS,GAAG,EAAhB;IACA,IAAIC,aAAJ;;IAEA,KAAI,IAAIC,IAAR,IAAgBN,IAAI,CAACO,KAArB,EAA2B;MACvB,IAAGF,aAAH,EAAiB;QACb,IAAIG,YAAY,GAAG;UACfC,CAAC,EAAEH,IADY;UAEfI,CAAC,EAAEV,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,IAAwBD;QAFZ,CAAnB;QAIAD,SAAS,CAACO,IAAV,CAAeH,YAAf;MACH;;MACDH,aAAa,GAAGL,IAAI,CAACG,SAAD,CAAJ,CAAgBG,IAAhB,CAAhB;IAEH;;IAAA;IACD,OAAOF,SAAP;EACH,CAhBD;;EAkBAd,SAAS,CAAC,MAAI;IACVsB,KAAK,CAAC,2DAAD,CAAL,CACCC,IADD,CACMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADlB,EAECF,IAFD,CAEMb,IAAI,IAAI;MACVgB,OAAO,CAACC,GAAR,CAAYjB,IAAZ;MACA,IAAII,SAAS,GAAGF,cAAc,CAACF,IAAD,EAAO,OAAP,CAA9B;MACAgB,OAAO,CAACC,GAAR,CAAYb,SAAZ;MACAH,OAAO,CAACG,SAAD,CAAP;IACH,CAPD;EAQH,CATQ,EASN,EATM,CAAT;EAYF,oBACE;IAAA,uBACI,QAAC,IAAD;MACI,OAAO,EAAEX,OADb;MAEI,IAAI,EAAE;QACFyB,QAAQ,EAAE,CAAC;UACPlB,IAAI,EAAEA;QADC,CAAD;MADR;IAFV;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADF;AAYD;;GA9CQD,S;;KAAAA,S;AAgDT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}